name: Deploy Java project to Azure Function App

on:
  push:
    branches:
      - main  # Trigger the deployment on push to the main branch

env:
  AZURE_FUNCTIONAPP_NAME: 'MyFunctionApplication1'  # Azure Function App name
  POM_XML_DIRECTORY: '.'                            # Directory where pom.xml is located
  DISTRIBUTION: 'temurin'                           # JDK distribution (e.g., 'zulu', 'temurin', etc.)
  JAVA_VERSION: '17'                                # Java version (e.g., '8', '11', '17')

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Use ubuntu-latest for Linux-based environments
    environment: dev
    steps:
    
    # Checkout the repository to get the latest code
    - name: Checkout GitHub repository
      uses: actions/checkout@v4

    # Set up Azure login with the service principal credentials stored in GitHub Secrets
    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}  # Ensure this secret is stored in GitHub Secrets

    # Set up the Java SDK (Java 17 in this case)
    - name: Set up Java SDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.DISTRIBUTION }}
        java-version: ${{ env.JAVA_VERSION }}

    # Restore project dependencies and build the project with Maven
    - name: Restore project dependencies and package with Maven
      shell: bash
      run: |
        pushd ./${{ env.POM_XML_DIRECTORY }}
        mvn clean package
        popd

    # List the contents of the target directory to verify the packaging process
    - name: List contents of target/azure-functions directory
      run: ls target/azure-functions

    # Deploy the packaged Azure Function using the Azure Functions GitHub Action
    - name: Deploy to Azure Function App
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: "target/azure-functions/${{ env.AZURE_FUNCTIONAPP_NAME }}"  # Path to your Azure Function package
